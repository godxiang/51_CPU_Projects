C51 COMPILER V9.54   WIFITEST                                                              12/20/2015 23:07:14 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE WIFITEST
OBJECT MODULE PLACED IN .\Objects\WifiTest.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE WifiTest.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -WifiTest.lst) TABS(2) OBJECT(.\Objects\WifiTest.obj)

line level    source

   1          #include "stc15w4k32s4.h"
   2          #include "intrins.h"
   3          
   4          typedef unsigned char BYTE;
   5          typedef unsigned int WORD;
   6          
   7          #define FOSC 22118400L          //系统频率
   8          #define BAUD 115200             //串口波特率
   9          
  10          #define NONE_PARITY     0       //无校验
  11          #define ODD_PARITY      1       //奇校验
  12          #define EVEN_PARITY     2       //偶校验
  13          #define MARK_PARITY     3       //标记校验
  14          #define SPACE_PARITY    4       //空白校验
  15          
  16          #define PARITYBIT NONE_PARITY   //定义校验位
  17          
  18          #define S3RI  0x01              //S3CON.0
  19          #define S3TI  0x02              //S3CON.1
  20          #define S3RB8 0x04              //S3CON.2
  21          #define S3TB8 0x08              //S3CON.3
  22          #define S4RI  0x01              //S4CON.0
  23          #define S4TI  0x02              //S4CON.1
  24          #define S4RB8 0x04              //S4CON.2
  25          #define S4TB8 0x08              //S4CON.3
  26          #define S1_S0 0x40              //P_SW1.6
  27          #define S1_S1 0x80              //P_SW1.7
  28          #define S3_S0 0x02              //P_SW2.1
  29          #define S4_S0 0x04
  30          #define BIT0 0x01
  31          #define BIT1 0x02
  32          #define BIT2 0x04
  33          #define BIT3 0x08
  34          #define BIT4 0x10
  35          #define BIT5 0x20
  36          #define BIT6 0x40
  37          #define BIT7 0x80             
  38          sbit Transmit_DATA0 =P2^0;
  39          sbit Transmit_DATA1 =P2^1;
  40          sbit Transmit_DATA2 =P2^2;
  41          sbit Transmit_DATA3 =P2^3;
  42          sbit Transmit_U2STB =P2^6;/*当发送数据时，需要先使此位置高，默认为输出，低电平*/
  43          sbit Transmit_U2REQ =P2^7;/*当接收到来自其他机器的高电平信号时，默认为输出*/
  44          sbit Transmit_U1STB =P2^4;/*当其他机器向本机发送数据时，默认为输入*/
  45          sbit Transmit_U1REQ =P2^5;/*当其他机器向本机发送数据时，默认为输入*/
  46          sbit Transmit_U2BusACK =P1^3;/*默认为输出，忙信号*/
  47          sbit Transmit_U1BusACK =P1^2;/*默认输入，忙信号检测*/
  48          
  49          
  50          
  51          bit Uart1busy;
  52          bit Uart3busy;
  53          bit Uart4busy;
  54          
C51 COMPILER V9.54   WIFITEST                                                              12/20/2015 23:07:14 PAGE 2   

  55          void Uart1SendData(BYTE dat);
  56          void Uart1SendString(char *s);
  57          void Uart3SendData(BYTE dat);
  58          void Uart3SendString(char *s);
  59          void Uart4SendData(BYTE dat);
  60          void Uart4SendString(char *s);
  61          unsigned char Sent_Byte(unsigned char Data0);
  62          unsigned char Read_Byte(void);
  63          void Transmit_init(void);
  64          void Delay1000ms();
  65          void Delay200ms();
  66          void delay_10us(void);
  67          
  68          void main()
  69          {
  70   1          ACC = P_SW1;
  71   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
  72   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
  73   1          P_SW2 &= ~S4_S0;            //S4_S0=0 (P0.2/RxD4, P0.3/TxD4)
  74   1      //  P_SW2 |= S4_S0;             //S4_S0=1 (P5.2/RxD4_2, P5.3/TxD4_2)    
  75   1          SCON = 0x50;                            
  76   1          S3CON = 0x10;
  77   1          S4CON = 0x10;
  78   1        
  79   1      
  80   1          AUXR = 0x40;               //定时器1为1T模式
  81   1          TMOD = 0x20;                //定时器1为模式2(8位自动重载)
  82   1          TL1 = (256 - (FOSC/32/BAUD));   //设置波特率重装值
  83   1          TH1 = (256 - (FOSC/32/BAUD));
  84   1          TR1 = 1;                   //定时器1开始工作
  85   1          ES = 1;                     //使能串口中断
  86   1          
  87   1          T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
  88   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
  89   1          AUXR = 0x54;                //T2为1T模式, 并启动定时器2
  90   1          IE2 = 0x18;                 //使能串口3,4中断
  91   1          EA = 1;
  92   1         Transmit_init();
  93   1          
  94   1          while(1)
  95   1          {
  96   2            unsigned char test;
  97   2            //Uart3SendString("STC15W4K32S4\r\nUart3 Test !\r\n");
  98   2            //Uart1SendString("STC15W4K32S4\r\nUart3 Test !\r\n");
  99   2            P36=1;
 100   2            Delay1000ms();
 101   2            P36=0;
 102   2            //test = Read_Byte();
 103   2            Delay200ms();
 104   2          }
 105   1      }
*** WARNING C280 IN LINE 96 OF WifiTest.c: 'test': unreferenced local variable
 106          
 107          /*----------------------------
 108          UART1 中断服务程序
 109          -----------------------------*/
 110          void Uart1() interrupt 4 using 1
 111          {
 112   1          if (RI)
 113   1          {
 114   2              RI = 0;                                        
 115   2          }
C51 COMPILER V9.54   WIFITEST                                                              12/20/2015 23:07:14 PAGE 3   

 116   1          if (TI)
 117   1          {
 118   2              TI = 0;              
 119   2              Uart1busy = 0;            
 120   2          }
 121   1      }
 122          /*----------------------------
 123          UART3 中断服务程序
 124          -----------------------------*/
 125          void Uart3() interrupt 17 using 1
 126          {
 127   1          if (S3CON & S3RI)
 128   1          {
 129   2              S3CON &= ~S3RI;         //清除S3RI位
 130   2              Uart4SendData(S3BUF);
 131   2              //Uart1SendData(S3BUF);             //P30显示串口数据
 132   2              //SendString("interrupt !\r\n");
 133   2            
 134   2          }
 135   1          if (S3CON & S3TI)
 136   1          {
 137   2              S3CON &= ~S3TI;         //清除S3TI位
 138   2              Uart3busy = 0;               //清忙标志
 139   2          }
 140   1      }
 141          /*----------------------------
 142          UART4 中断服务程序
 143          -----------------------------*/
 144          void Uart4() interrupt 18 using 1
 145          {
 146   1          if (S4CON & S4RI)
 147   1          {
 148   2              S4CON &= ~S4RI;         
 149   2              Uart1SendData(S4BUF);                
 150   2          }
 151   1          if (S4CON & S4TI)
 152   1          {
 153   2              S4CON &= ~S4TI;        
 154   2              Uart4busy = 0;             
 155   2          }
 156   1      }
 157          
 158          
 159          void Uart1SendData(BYTE dat)
 160          {
 161   1          while (Uart1busy);              
 162   1          ACC = dat;                 
 163   1          if (P)                      
 164   1          {
 165   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;                
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 1;               
              #endif
 170   2          }
 171   1          else
 172   1          {
 173   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;                
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;               
              #endif
C51 COMPILER V9.54   WIFITEST                                                              12/20/2015 23:07:14 PAGE 4   

 178   2          }
 179   1          Uart1busy = 1;
 180   1          SBUF = ACC;                
 181   1      }
 182          
 183          void Uart1SendString(char *s)
 184          {
 185   1          while (*s)                 
 186   1          {
 187   2               Uart1SendData(*s++);         
 188   2          }
 189   1      }
 190          /*----------------------------
 191          发送串口数据
 192          ----------------------------*/
 193          
 194          void Uart3SendData(BYTE dat)
 195          {
 196   1          while (Uart3busy);          
 197   1          Uart3busy = 1;
 198   1          S3BUF = dat;               
 199   1      }
 200          
 201          /*----------------------------
 202          发送字符串
 203          ----------------------------*/
 204          
 205          void Uart3SendString(char *s)
 206          {
 207   1          while (*s)               
 208   1          {
 209   2              Uart3SendData(*s++);        
 210   2          }
 211   1      }
 212          
 213          /*----------------------------
 214          串口4发送数据
 215          ----------------------------*/
 216          void Uart4SendData(BYTE dat)
 217          {
 218   1          while (Uart4busy);                            
 219   1          Uart4busy = 1;
 220   1          S4BUF = dat;              
 221   1      }
 222          
 223          /*----------------------------
 224          串口4发送字符串
 225          ----------------------------*/
 226          void Uart4SendString(char *s)
 227          {
 228   1          while (*s)                 
 229   1          {
 230   2              Uart4SendData(*s++);         
 231   2          }
 232   1      }
 233          
 234          /***************************************************************/
 235          /*函数名称：Void Transmit_init(void)                           */
 236          /*函数功能：发送初始化程序                                     */
 237          /*入口参数：无                                                 */
 238          /*出口参数：无                                                 */
 239          /***************************************************************/
C51 COMPILER V9.54   WIFITEST                                                              12/20/2015 23:07:14 PAGE 5   

 240          void Transmit_init(void)
 241           { //P2M0=P2M0&(~BIT0);/*设定P2.0为高阻输入*/
 242   1         //P2M1=P2M0|BIT0;
 243   1         //P2M0=P2M0&(~BIT1);/*设定P2.1为高阻输入*/
 244   1        // P2M1=P2M0|BIT1;
 245   1        // P2M0=P2M0&(~BIT2);/*设定P2.2为高阻输入*/
 246   1        // P2M1=P2M0|BIT2;
 247   1       //  P2M0=P2M0&(~BIT3);/*设定P2.3为高阻输入*/
 248   1        // P2M1=P2M0|BIT3;
 249   1        // P2M0=P2M0&(~BIT4);/*设定P2.4为输出*/
 250   1        // P2M1=P2M0&(~BIT4);
 251   1        // P2M0=P2M0&(~BIT5);/*设定P2.5为输出*/
 252   1        // P2M1=P2M0&(~BIT5);
 253   1        // P2M0=P2M0&(~BIT6);/*设定P2.6为高阻输入*/
 254   1        // P2M1=P2M0|BIT6;
 255   1       //  P2M0=P2M0&(~BIT7);/*设定P2.7为高阻输入*/
 256   1        // P2M1=P2M0|BIT7;*/
 257   1         P2M0 = 0x0c;       //00001100
 258   1         P2M1 = 0xf3;       //11110011      设定P2.0 P2.1 P2.2 P2.3 为高阻输入 P2.4 P2.5为输出  P2.6 P2.7为高阻输入
 259   1         P1M0 = 0x20;       //00100000
 260   1         P1M1 = 0x10;       //00010000      设定P1.2为输出,设定P1.3为高阻输入
 261   1         P3M0 = 0x00;           //00000000
 262   1         P3M1 = 0x03;           //00000011
 263   1         
 264   1        }
 265          
 266          /***************************************************************/
 267          /*函数名称：void Sent_Byte(unsigned char Data0)                */
 268          /*函数功能：发送一个字节的低4位                                */
 269          /*入口参数：无                                                 */
 270          /*出口参数：无                                                 */
 271          /*发送数据流程① 一方单片机检查8位端口状态信号CHKREQ ，以判断对方是否已提 出发送数据的申请。
 272                        ② 如果对方提出申请则等待，否则提出发送数据申请，并置REQ有效。 
 273                  ③ 再次检查8位端口状态信号CHKREQ判断对方是否提出发送数据的申请。
 274                  ④ 如果对方提出申请则发生冲突，清楚REQ并延时，然后执行第一步。
 275                  ⑤ 将数据送8位端口，再设定STB有效, 使对方进入中断以便取走数据。
 276                  ⑥ 检查CHK，等待对方单片机取走数据。
 277                  ⑦ 检查数据是否发 送完，如果没有则继续执行步骤5进行发送。
 278                  ⑧ 撤销REQ信号，释放8位端口。
 279                  ⑨ 数据发送 完毕退出流程。
 280          数据接收流程：①进入中断服务流程。
 281                        ②从8位端口读取数据。
 282                  ③设置ACK信号有 效，表示数据已成功读取。
 283                  ④退出中断服务流程。
 284          /*           P2>----------------------P2                     */
 285          /*           STB>---------------------INT                    */
 286          /*           REQ>---------------------CHKREQ                 */
 287          /*           INT<---------------------STB                    */
 288          /*           CHKREQ<---------------------REQ                 */
 289          /*           ACK--------------------->CHKACK               */
 290          /*           CHKACK<---------------------ACK               */
 291          /*************************************************************/
 292          unsigned char  Sent_Byte(unsigned char Data0)/*发送一个字节的低4位*/
 293            {/*首先检测当前的位总线是否忙*/
 294   1        if((!Transmit_U2REQ)&&(Transmit_U2BusACK))/*检查U2是否提出发送数据申请，有申请则等待*/
 295   1         {/*U2等待*/
 296   2          Transmit_U1REQ=1;/*提出申请*/
 297   2        if(!Transmit_U2REQ)
 298   2         {   if((Data0&BIT0)==BIT0) {Transmit_DATA0=Transmit_DATA0|BIT0;}
 299   3             else{Transmit_DATA0=Transmit_DATA0&(~BIT0);}
 300   3             if((Data0&BIT1)==BIT1) {Transmit_DATA0=Transmit_DATA0|BIT1;}
 301   3             else{Transmit_DATA0=Transmit_DATA0&(~BIT1);}
C51 COMPILER V9.54   WIFITEST                                                              12/20/2015 23:07:14 PAGE 6   

 302   3               if((Data0&BIT2)==BIT2) {Transmit_DATA0=Transmit_DATA0|BIT2;}
 303   3               else{Transmit_DATA0=Transmit_DATA0&(~BIT2);}
 304   3               if((Data0&BIT3)==BIT3) {Transmit_DATA0=Transmit_DATA0|BIT3;}
 305   3               else{Transmit_DATA0=Transmit_DATA0&(~BIT3);}
 306   3             Transmit_U1STB=1;/*提出中断申请*/
 307   3           while(!Transmit_U2BusACK);/*等待退出*/
 308   3           Transmit_U1REQ=0;
 309   3           Transmit_U1STB=0;
 310   3           return(0);
 311   3          }
 312   2        else 
 313   2         {Transmit_U1REQ=0;return(1);}
 314   2          }
 315   1        else
 316   1         {return(1);}/*U2忙*/
 317   1         }
 318          /***************************************************************/
 319          /*函数名称：unsigned char Read_Byte(void)                      */
 320          /*函数功能：接收一个字节的低4位                                */
 321          /*入口参数：无                                                 */
 322          /*出口参数：无                                                 */
 323          /***************************************************************/
 324          unsigned char Read_Byte(void)/*接收一个字节的低4位*/
 325            { unsigned char Read_Byte_data=0;
 326   1          if(Transmit_U2STB)/*U2STB=1,读取一个数据*/                    
 327   1           { if(Transmit_DATA0) {Read_Byte_data=Read_Byte_data|BIT0;}
 328   2           if(Transmit_DATA1) {Read_Byte_data=Read_Byte_data|BIT1;}
 329   2           if(Transmit_DATA2) {Read_Byte_data=Read_Byte_data|BIT2;}
 330   2           if(Transmit_DATA3) {Read_Byte_data=Read_Byte_data|BIT3;}
 331   2           Transmit_U2BusACK=1;/*发送数据读取完成相应信号*/
 332   2           delay_10us();
 333   2           Transmit_U2BusACK=0;/*发送数据读取完成相应信号*/
 334   2           return(Read_Byte_data);
 335   2          } 
 336   1         else
 337   1          {return(0);}  
 338   1         }
 339          void delay_10us(void)
 340            { unsigned char i=0,j=0;
 341   1          for(i=0;i<255;i++)
 342   1          for(j=0;j<255;j++)
 343   1           {_nop_();}
 344   1         }  
 345          
 346          void Delay1000ms()    //@22.1184MHz
 347          {
 348   1        unsigned char i, j, k;
 349   1      
 350   1        _nop_();
 351   1        _nop_();
 352   1        i = 85;
 353   1        j = 12;
 354   1        k = 155;
 355   1        do
 356   1        {
 357   2          do
 358   2          {
 359   3            while (--k);
 360   3          } while (--j);
 361   2        } while (--i);
 362   1      }
 363          
C51 COMPILER V9.54   WIFITEST                                                              12/20/2015 23:07:14 PAGE 7   

 364          void Delay200ms()   //@22.1184MHz
 365          {
 366   1        unsigned char i, j, k;
 367   1      
 368   1        _nop_();
 369   1        _nop_();
 370   1        i = 17;
 371   1        j = 208;
 372   1        k = 27;
 373   1        do
 374   1        {
 375   2          do
 376   2          {
 377   3            while (--k);
 378   3          } while (--j);
 379   2        } while (--i);
 380   1      }
 381          
 382          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    527    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
