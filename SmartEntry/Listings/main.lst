C51 COMPILER V9.54   MAIN                                                                  01/02/2016 12:08:18 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          #include "idcard.h"
   3          #include "uart.h"
   4          
   5          unsigned char const code HEART_BEAT[]={0x55, 0xaa, 0x00, 0x01, 0x03, 0x71, 0x00, 0x01, 0x00, 0x01, 0x01, 0
             -x00, 0x01, 0x00, 0x00, 0x16};
   6          
   7          void main(void)
   8          
   9          {
  10   1      init_Uart();
  11   1      IO_Init();
  12   1      Timer0_Init();
  13   1      while(1){
  14   2      Op_IdCard();
  15   2      Delay_ms(400);                      //等待串口接收数据完毕
  16   2      UART3_Proccess();                   //串口数据处理
  17   2      CommonMessProce();                  //通用消息处理函数
  18   2      }
  19   1      }
  20          
  21          /***********************************************
  22          函数名称：Timer0_Init
  23          功    能：定时器0初始化函数
  24          入口参数：无
  25          返 回 值：无  
  26          备    注：无
  27          ************************************************/
  28          void Timer0_Init(void)
  29          {
  30   1      AUXR &=0x7f;    //定时器0的速度是传统8051的速度，12分频。
  31   1      TMOD &=0xf0;        //T0工作于十六位自动重装定时方式
  32   1      //使用位操作，避免对其他定时器产生影响
  33   1      TL0=0x00;     //定时初值50ms   11.0592MHz
  34   1      TH0=0x70;     
  35   1      ET0=1;          //使能T0中断
  36   1      EA=1;         //使能总中断
  37   1      TR0=1;              //运行T0  
  38   1      }
  39          /***********************************************
  40          函数名称：Timer0_ISR
  41          功    能：定时器0中断服务函数
  42          入口参数：无
  43          返 回 值：无  
  44          备    注：无
  45          ************************************************/
  46          void Timer0_ISR(void) interrupt 1 using 2
  47          {
  48   1      static unsigned int T0_Cnt=0; 
  49   1      unsigned char i;
  50   1      unsigned char *dat;
  51   1      dat = HEART_BEAT;
  52   1                //使用静态计数器,每次调用该中断函数时，
  53   1                //静态计数器都能保持上一次的计数值。
C51 COMPILER V9.54   MAIN                                                                  01/02/2016 12:08:18 PAGE 2   

  54   1                //如果不使用静态计数器，每次调用该中断函数时
  55   1                //该计数器初值都是0，计数值就无法累加。
  56   1                //这里不需要重装定时初值 
  57   1      T0_Cnt++; //计数器加1
  58   1      if(T0_Cnt==50*40)         //定时1000ms
  59   1      {
  60   2        T0_Cnt=0;
  61   2        //ET0=0;                //安全起见可以先关闭定时器，避免再次中断，丢失当前栈中的数据
  62   2        IE2 &= ~0x08;           //关闭串口3中断
  63   2        for(i=0;i<sizeof(HEART_BEAT);i++){
  64   3          S3BUF=*(dat++);
  65   3          Delay_ms(5);
  66   3          while(!S3CON & 0x02);
  67   3          S3CON &= ~0x02;         //清除S3TI位
  68   3        }
  69   2        IE2 |= 0x08;              //开启串口3中断
  70   2        //ET0=1;                  //使能T0中断
  71   2      
  72   2      
  73   2      //    P43 = 0;                                        //开闸
  74   2      //    P44 = 0;
  75   2      //    Delay_ms(2000);
  76   2      //    P43 = 1;
  77   2      //    P44 = 1;
  78   2      }
  79   1      }
  80          
  81          
  82          /***********************************************
  83          函数名称：IO_Init
  84          功    能：单片机IO端口模式初始化
  85          入口参数：无
  86          返 回 值：无  
  87          备    注：STC15W4K32S4系列A版单片机部分端口复位后
  88                不是准双向口,需要设置才能正常使用
  89          ************************************************/
  90          void IO_Init(void)
  91          {
  92   1      
  93   1      //将P04 P05 P06 P07设置为开漏口
  94   1      //因为单片机为5V端口，W25Q64为3.3V端口，为了实现电平匹配
  95   1      //将单片机设置为开漏结构，由外部上拉到3.3V。
  96   1      P4M0 = 0;
  97   1      P4M1 = 0;                                             //继电器端口初始化
  98   1      P0M1 |= (1<<4) | (1<<5) | (1<<6) | (1<<7) ;  
  99   1      P0M0 |= (1<<4) | (1<<5) | (1<<6) | (1<<7) ;
 100   1      //分析
 101   1      //  1<<0等价于0x01 即 0000 0001
 102   1      //  1<<1等价于0x02 即 0000 0010
 103   1      //  1<<2等价于0x04 即 0000 0100
 104   1      //  1<<3等价于0x08 即 0000 1000
 105   1      //  以此类推1<<n 即第n位为1，其余位是0
 106   1      
 107   1      //  x |=(1<<n)  即对x执行按位取或 
 108   1      //  即x中的第n位置为1，不改变其他位状态  
 109   1      
 110   1      //  y &=~(1<<n)  即将1<<n按位取反，然后对y按位取与 
 111   1      //  即y中的第n位置为0，不改变其他位状态  
 112   1      P2M0 = 0x30;        //00110000
 113   1      P2M1 = 0xc0;        //11000000      设定P2.0 P2.1 P2.2 P2.3 为高阻输入 P2.4 P2.5为输出  P2.6 P2.7为高阻输入
 114   1      P1M0 = 0x20;        //00000100
 115   1      P1M1 = 0x10;        //00001000      设定P1.2为输出,设定P1.3为高阻输入
C51 COMPILER V9.54   MAIN                                                                  01/02/2016 12:08:18 PAGE 3   

 116   1      
 117   1      //P10 P14复位后为强推挽输出、强上拉，
 118   1      //防止不当操作导致端口损坏，初始化为准双向口 
 119   1      //将P10 P14设置为准双向口
 120   1      //P1M1 &=~( (1<<0) | (1<<4) );  
 121   1      //P1M0 &=~( (1<<0) | (1<<4) );
 122   1      
 123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    209    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =      2       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
