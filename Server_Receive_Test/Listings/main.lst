C51 COMPILER V9.54   MAIN                                                                  12/18/2015 18:43:29 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          
   4          void main(void)
   5            {
   6   1          init_Uart();
   7   1          while(1){
   8   2          Delay2000ms();                        //等待身份证模块上电稳定
   9   2          UART4_Proccess();
  10   2          }
  11   1      }
  12          /*****************************************/
  13          /* 串口1、4初始化                          */
  14          /* 程序功能：串口1、4初始化                */
  15          /* 入口参数:无                           */
  16          /* 出口参数:无                           */
  17          /*****************************************/
  18          void init_Uart()
  19            {
  20   1          P_SW2 &= ~S4_S0;            //S4_S0=0 (P0.2/RxD4, P0.3/TxD4)
  21   1          ACC = P_SW1;
  22   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
  23   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
  24   1          SCON = 0x50;                //1010000
  25   1          S4CON = 0x10;               //10000
  26   1          T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
  27   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
  28   1          AUXR = 0x14;                //T2为1T模式, 并启动定时器2 10100
  29   1          AUXR |= 0x01;               //选择定时器2为串口1的波特率发生器
  30   1          ES = 1;                     //使能串口1中断
  31   1          IE2 = 0x10;                 //使能串口4中断
  32   1          EA = 1;
  33   1      }
  34          
  35          /*----------------------------
  36          UART4 中断服务程序
  37          -----------------------------*/
  38          void Uart4_ISR() interrupt 18 using 1
  39          {
  40   1        unsigned char dat;
  41   1        EA=0;
  42   1            if (S4CON & S4RI)
  43   1          {
  44   2            dat = S4BUF;
  45   2            if(Re_Cnt < 100)
  46   2            Re_Buffer[Re_Cnt++] = dat;
  47   2            S4CON &= ~S4RI;                                               //串口接收中断标记需软件清零
  48   2          }
  49   1              
  50   1          
  51   1          if (S4CON & S4TI)
  52   1          {
  53   2            S4CON&= ~S4TI;
  54   2            Uart4busy=0;
C51 COMPILER V9.54   MAIN                                                                  12/18/2015 18:43:29 PAGE 2   

  55   2          }
  56   1        EA=1;
  57   1      }
  58          /*----------------------------
  59          串口4处理函数
  60          ----------------------------*/
  61          void UART4_Proccess(void){
  62   1        bit Header_State;
  63   1        unsigned char i,j = 0;
  64   1        unsigned char CS = 0x00;
  65   1          if(Re_Buffer[0] == 0x55 && Re_Buffer[1] == 0xaa)
  66   1            Header_State = 1;
  67   1          else
  68   1            Header_State = 0;
  69   1          if(Header_State == 1){                                            //头没有出错
  70   2          length = Hex2Int (Re_Buffer[2])*256 + Hex2Int (Re_Buffer[3]);     //获得data的长度，以便计算校验码CS
  71   2          for(i=4;i<10;i++){
  72   3              if(LocalHostNum[i] == Re_Buffer[i])                           //判断是否是本机编号
  73   3                j++;
  74   3            
  75   3          }
  76   2            if(j==6){                                                       //是本机编号
  77   3              for (j = 11;j<length + 11;j++){                                   //计算校验码CS
  78   4                CS+=Re_Buffer[j];
  79   4              }
  80   3              if(CS == Re_Buffer[11+length])                              //校验码CS是否出错 不出错则进行数据解析
  81   3              {
  82   4                for(j=0;j<3;j++)
  83   4                  {
  84   5                  if(MessageType[j][0] == Re_Buffer[11] && MessageType[j][0] == Re_Buffer[12])
  85   5                  MessType = j;
  86   5                }
  87   4              }
  88   3            }
  89   2          }
  90   1      }
  91          /*----------------------------
  92          串口4发送数据
  93          ----------------------------*/
  94          void Uart4SendData(unsigned char Udat)
  95          {
  96   1        while(Uart4busy);
  97   1        ACC = Udat;
  98   1        Uart4busy=1;
  99   1        S4BUF = ACC;
 100   1      }
 101          
 102          
 103          void Uart4SendString(char *s)
 104          {
 105   1          while (*s)                 
 106   1          {
 107   2               Uart4SendData(*s++);         
 108   2          }
 109   1      }
 110          
 111          /*----------------------------
 112          UART1 中断服务程序
 113          -----------------------------*/
 114          void Uart1_ISR() interrupt 4 using 1
 115          {
 116   1      
C51 COMPILER V9.54   MAIN                                                                  12/18/2015 18:43:29 PAGE 3   

 117   1        EA=0;
 118   1          if (RI)
 119   1          {
 120   2      
 121   2              RI = 0;                 //清除RI位
 122   2          }
 123   1          if (TI)
 124   1          {
 125   2              TI = 0;                 //清除TI位
 126   2              Uart1busy = 0;               //清忙标志
 127   2          }
 128   1        EA=1;
 129   1      }
 130          
 131          /*----------------------------
 132          发送串口数据
 133          ----------------------------*/
 134          void Uart1SendData(unsigned char dat)
 135          {
 136   1          while (Uart1busy);               //等待前面的数据发送完成
 137   1          Uart1busy = 1;
 138   1          SBUF = dat;                 //写数据到UART数据寄存器
 139   1      }
 140          
 141          /*----------------------------
 142          发送字符串
 143          ----------------------------*/
 144          void Uart1SendString(char *s)
 145          {
 146   1          while (*s)                  //检测字符串结束标志
 147   1          {
 148   2              Uart1SendData(*s++);         //发送当前字符
 149   2          }
 150   1      }
 151          
 152          
 153          
 154          
 155          
 156          void Delay1000ms()    //@22.1184MHz
 157          {
 158   1        unsigned char i, j, k;
 159   1      
 160   1        _nop_();
 161   1        _nop_();
 162   1        i = 85;
 163   1        j = 12;
 164   1        k = 155;
 165   1        do
 166   1        {
 167   2          do
 168   2          {
 169   3            while (--k);
 170   3          } while (--j);
 171   2        } while (--i);
 172   1      }
 173          void Delay2000ms()    //@22.1184MHz
 174          {
 175   1        unsigned char i, j, k;
 176   1      
 177   1        _nop_();
 178   1        _nop_();
C51 COMPILER V9.54   MAIN                                                                  12/18/2015 18:43:29 PAGE 4   

 179   1        i = 169;
 180   1        j = 24;
 181   1        k = 59;
 182   1        do
 183   1        {
 184   2          do
 185   2          {
 186   3            while (--k);
 187   3          } while (--j);
 188   2        } while (--i);
 189   1      }
 190          
 191          /***********************************************
 192          函数名称：Delay_ms
 193          功    能：STC15系列单片机1ms延时程序
 194          入口参数：ms:延时的毫秒数
 195          返 回 值：无  
 196          备    注：示波器实测：0.997ms，内部时钟：11.0592MHz           
 197          ************************************************/
 198          void Delay_ms(unsigned int ms)
 199          {
 200   1        
 201   1          unsigned int i;
 202   1          while( (ms--) != 0)
 203   1          {
 204   2            for(i = 0; i < 580; i++); 
 205   2          } 
 206   1        
 207   1      }
 208          void Delay200ms()     //@22.1184MHz
 209          {
 210   1        unsigned char i, j, k;
 211   1      
 212   1        _nop_();
 213   1        _nop_();
 214   1        i = 17;
 215   1        j = 208;
 216   1        k = 27;
 217   1        do
 218   1        {
 219   2          do
 220   2          {
 221   3            while (--k);
 222   3          } while (--j);
 223   2        } while (--i);
 224   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    501    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    100    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
